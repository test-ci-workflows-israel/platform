name: Deployment train production

on: 'workflow_dispatch'

jobs:
  check_version_back:
    name: Check version back
    uses: ./.github/workflows/check_version.yml
    if: ${{ !cancelled() }}
    with:
      url_to_check: ''
      name: 'back'
      repository: back

  check_version_front:
    name: Check version front
    uses: ./.github/workflows/check_version.yml
    if: ${{ !cancelled() }}
    with:
      url_to_check: ''
      name: 'front'
      repository: front

  check_version_app:
    name: Check version app
    uses: ./.github/workflows/check_version.yml
    if: ${{ !cancelled() }}
    with:
      url_to_check: ''
      name: 'app'
      repository: app

  echo_check_version:
    name: Check version front
    runs-on: ubuntu-latest
    needs: check_version_app
    if: ${{ !cancelled()}}
    steps:
      - run: echo ${{needs.check_version_app.outputs.deploy}}

  deploy_back:
    name: Deploy back
    needs: check_version_back
    if: ${{ needs.check_version_back.outputs.deploy == 'true' && !cancelled() }}
    uses: test-ci-workflows-israel/back/.github/workflows/prod.yml@main

  deploy_front:
    name: Deploy front
    needs: [check_version_front, deploy_back]
    if: ${{ needs.check_version_front.outputs.deploy == 'true' && needs.deploy_back.result != 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/front/.github/workflows/prod.yml@main

  deploy_app:
    name: Deploy app
    needs: [check_version_app, deploy_front, deploy_back]
    if: ${{ needs.check_version_app.outputs.deploy == 'true' && needs.deploy_back.result != 'failure' && needs.deploy_front.result != 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/app/.github/workflows/prod.yml@main

  deploy_back_retry1:
    name: 'Deploy back: retry 1'
    needs: deploy_back
    if: ${{ needs.deploy_back.result == 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/back/.github/workflows/prod.yml@main

  deploy_front_retry1:
    name: 'Deploy front: retry 1'
    needs: deploy_front
    if: ${{ needs.deploy_front.result == 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/front/.github/workflows/prod.yml@main

  deploy_app_retry1:
    name: 'Deploy app: retry 1'
    needs: deploy_app
    if: ${{ needs.deploy_app.result == 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/app/.github/workflows/prod.yml@main

  deploy_back_retry2:
    name: 'Deploy back: retry 2'
    needs: deploy_back_retry1
    if: ${{ needs.deploy_back_retry1.result == 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/back/.github/workflows/prod.yml@main

  deploy_front_retry2:
    name: 'Deploy front: retry 2'
    needs: deploy_front_retry1
    if: ${{ needs.deploy_front_retry1.result == 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/front/.github/workflows/prod.yml@main

  deploy_app_retry2:
    name: 'Deploy app: retry 2'
    needs: deploy_app_retry1
    if: ${{ needs.deploy_app_retry1.result == 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/app/.github/workflows/prod.yml@main

  deploy_back_retry3:
    name: 'Deploy back: retry 3'
    needs: deploy_back_retry2
    if: ${{ needs.deploy_back_retry2.result == 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/back/.github/workflows/prod.yml@main

  deploy_front_retry3:
    name: 'Deploy front: retry 3'
    needs: deploy_front_retry2
    if: ${{ needs.deploy_front_retry2.result == 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/front/.github/workflows/prod.yml@main

  deploy_app_retry3:
    name: 'Deploy app: retry 3'
    needs: deploy_app_retry2
    if: ${{ needs.deploy_app_retry2.result == 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/app/.github/workflows/prod.yml@main

  deploy_back_retry4:
    name: 'Deploy back: retry 4'
    needs: deploy_back_retry3
    if: ${{ needs.deploy_back_retry3.result == 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/back/.github/workflows/prod.yml@main

  deploy_front_retry4:
    name: 'Deploy front: retry 4'
    needs: deploy_front_retry3
    if: ${{ needs.deploy_front_retry3.result == 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/front/.github/workflows/prod.yml@main

  deploy_app_retry4:
    name: 'Deploy app: retry 4'
    needs: deploy_app_retry3
    if: ${{ needs.deploy_app_retry3.result == 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/app/.github/workflows/prod.yml@main

  deploy_back_retry5:
    name: 'Deploy back: retry 5'
    needs: deploy_back_retry4
    if: ${{ needs.deploy_back_retry4.result == 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/back/.github/workflows/prod.yml@main

  deploy_front_retry5:
    name: 'Deploy front: retry 5'
    needs: deploy_front_retry4
    if: ${{ needs.deploy_front_retry4.result == 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/front/.github/workflows/prod.yml@main

  deploy_app_retry5:
    name: 'Deploy app: retry 5'
    needs: deploy_app_retry4
    if: ${{ needs.deploy_app_retry4.result == 'failure' && !cancelled() }}
    uses: test-ci-workflows-israel/app/.github/workflows/prod.yml@main

  rollback_back:
    name: Rollback back
    needs: deploy_back_retry5
    if: ${{ needs.deploy_back_retry5.result == 'failure' && !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "Rollback back"

  rollback_front:
    name: Rollback front
    needs: deploy_front_retry5
    if: ${{ needs.deploy_front_retry5.result == 'failure' && !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "Rollback front"

  deploy_back_rollback:
    name: 'Deploy back: rollback'
    needs: rollback_back
    if: ${{ needs.rollback_back.result == 'success' && !cancelled() }}
    uses: test-ci-workflows-israel/back/.github/workflows/prod.yml@main

  deploy_front_rollback:
    name: 'Deploy front: rollback'
    needs: rollback_front
    if: ${{ needs.rollback_front.result == 'success' && !cancelled() }}
    uses: test-ci-workflows-israel/front/.github/workflows/prod.yml@main
## https://docs.github.com/en/actions/sharing-automations/creating-actions/creating-a-composite-action

on:
  workflow_call:
    inputs:
      url_to_check:
        type: string
        required: true
      repository:
        type: string
        required: true
      name:
        type: string
        required: true
    outputs:
      deploy:
        value: ${{ jobs.check_version.outputs.deploy }}

jobs:
  check_version:
    name: Check version
    runs-on: ubuntu-latest
    continue-on-error: true
    outputs:
      deploy: ${{ steps.set_output.outputs.deploy }}

    steps:
      - name: 'Obtener última release del repo'
        id: release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: releases } = await github.rest.repos.listReleases({
              owner: "test-ci-workflows-israel",
              repo: "${{ inputs.repository }}",
              per_page: 1,
            });
            return releases[0].tag_name;

      - name: 'Echo version'
        id: set_output
        env:
          prod_version: '1.0.0'
        run: |
          echo $prod_version
          echo ${{ steps.release.outputs.result }}
          if [ "$prod_version" == "${{ steps.release.outputs.result }}" ]; then
            echo "deploy=false" >> "$GITHUB_OUTPUT"
            echo "::notice title=No va a desplegarse ${{inputs.name}}::La última versión ya está desplegada en producción"
          else
            echo "deploy=true" >> "$GITHUB_OUTPUT"
            echo "::notice title=Se va a desplegar ${{inputs.name}}::La última versión no está desplegada en producción"
          fi
